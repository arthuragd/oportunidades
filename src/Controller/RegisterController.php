<?php
// src/Controller/RegisterController.php
namespace App\Controller;

use App\Entity\Register;
use App\Entity\User;
use App\Entity\Job;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Form\Extension\Core\Type\FileType;

class RegisterController extends Controller
{
    /**
     * @Route("/register/view/{id}", name="register")
     */
    public function register(Request $request,UserInterface $user,$id)
    {
        $job_id = $id;
        $register = new Register();
        $user_id = $user->getId();
        $job = $this->getDoctrine()
                ->getRepository('App:Job')
                ->find($id);
        
        $reg = $this->getDoctrine()
                ->getRepository('App:Register')->findBy(['user_id' => $user_id,'job_id' => $job_id]);
        

            $form = $this->createFormBuilder($register)
            ->add('file',FileType::class, array('label' => 'Anexar Curriculo' , 'attr' => array('class'=> 'form-control','style' => 'margin-bottom:15px')))
            ->getForm();
            
            $form->handleRequest($request); 

                if ($form->isSubmitted() && $form->isValid()) {
                    $register = $form->getData();
                    
                    $file = $form->get('file')->getData();
                    $fileName = $this->generateUniqueFileName(). '.'.$file->guessExtension();
                    $file->move(
                        $this->getParameter('curriculo_directory'),
                        $fileName
                    );

                    
                    $register->setJobId($job_id);
                    $register->setUserId($user_id);
                    $register->setFile($fileName);
                    
                    $entityManager = $this->getDoctrine()->getManager();
                    $entityManager->persist($register);
                    $entityManager->flush();
        
                    // ... do any other work - like sending them an email, etc
                    // maybe set a "flash" success message for the user
        
                    return $this->redirectToRoute('welcome');
                }
             
        return $this->render('/register/view.html.twig', array(
            'job' => $job,
            'form' => $form->createView(),
            'reg' => $reg
        ));
    }

    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}